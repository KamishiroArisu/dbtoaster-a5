SOURCE = \
	Util.ml \
	Ring.ml \
	Calculus.mli \
	Calculus.ml \
	M3.mli \
	M3.ml \
	M3Common.mli \
	M3Common.ml \
	Compiler.mli \
	Compiler.ml \
	CalcToM3.mli \
	CalcToM3.ml \
	M3Compiler.mli \
	M3Compiler.ml \
	lib/ocaml/SliceableMap.mli \
	lib/ocaml/SliceableMap.ml \
	lib/ocaml/M3OCaml.ml \
	lib/ocaml/StandardAdaptors.ml \
	codegen/ocaml/M3Interpreter.ml \
	codegen/ocaml/M3OCamlgen.ml

HEADER_ONLY_SOURCE = \
	M3Codegen.mli

# Generated bytecode source files (eg by ocamllex, ocamlyacc)
LEX_SOURCE  = parser/Sqllexer.ml
YACC_SOURCE = parser/Sqlparser.ml
GENERATED_SOURCE = \
		$(subst .ml,.mli,$(YACC_SOURCE)) \
		$(YACC_SOURCE) $(LEX_SOURCE)
SOURCE += $(GENERATED_SOURCE)

# Compiled object code
ML_OBJ = $(subst .ml,.cmo,$(filter %.ml,$(SOURCE)))
MLI_OBJ = $(subst .mli,.cmi,$(filter %.mli,$(HEADER_ONLY_SOURCE)))
ML_OPT = $(subst .ml,.cmx,$(filter %.ml,$(SOURCE)))
MLI_OPT = $(subst .mli,.cmxi,$(filter %.mli,$(HEADER_ONLY_SOURCE)))

C_OBJ = $(subst .ml,.o,$(filter %.ml,$(SOURCE)))

# Non-bytecode source that still needs to be cleaned
OTHER_SOURCE = \
	Driver.ml \
	test/unit/m3_ex.ml \
	test/examples/vwap_m3_ex.ml \
	query.ml

OBJ_DEPS = $(MLI_OBJ) $(ML_OBJ)
OPT_DEPS = $(MLI_OPT) $(ML_OPT)

# Source files constituting the DBToaster library; These are required to compile
# code generated by dbtoaster.
#
# Note: Driver.ml has a mirror of this list that needs manual synchronization.
RUNTIME = \
	Util.ml \
	M3.mli \
	M3.ml \
	M3Common.mli \
	M3Common.ml \
	lib/ocaml/SliceableMap.mli \
	lib/ocaml/SliceableMap.ml \
	lib/ocaml/M3OCaml.ml \
	lib/ocaml/StandardAdaptors.ml

# Generated files that need to be cleaned up
CLEAN_OBJ = \
	$(ML_OBJ) $(subst .cmo,.cmi,$(ML_OBJ)) $(ML_OPT) $(C_OBJ) \
	$(subst .mli,.cmi,$(HEADER_ONLY_SOURCE))\
	$(subst .mli,.cmxi,$(HEADER_ONLY_SOURCE))\
	$(subst .ml,.cmi,$(OTHER_SOURCE)) $(subst .ml,.cmo,$(OTHER_SOURCE)) \
	$(subst .ml,.cmx,$(OTHER_SOURCE)) $(subst .ml,.o,$(OTHER_SOURCE)) \
	$(GENERATED_SOURCE) \
	$(patsubst %.ml,%.cmx,$(filter %.ml,$(RUNTIME)))\
	dbtoaster dbtoaster_top m3_ex vwap query

INCLUDE_DIR = \
	-I codegen/ocaml/ \
	-I parser/ \
	-I lib/ocaml
INCLUDE_OBJ = \
	str.cma \
	unix.cma 
INCLUDE_OPT = $(subst .cma,.cmxa,$(INCLUDE_OBJ))
 
OC_FLAGS = $(INCLUDE_DIR) $(INCLUDE_OBJ) -g
OOPT_FLAGS = $(INCLUDE_DIR) $(INCLUDE_OPT) \
						 -ccopt -O3 -nodynlink -unsafe -noassert

.PHONY: all driver top test clean

all: dbtoaster_top dbtoaster

driver: dbtoaster

top: dbtoaster_top

$(ML_OBJ) : %.cmo : %.ml
	@echo Compiling $*
	@if [ -f $*.mli ] ; then ocamlc $(OC_FLAGS) -c $*.mli $<; \
	else ocamlc $(OC_FLAGS) -c $<; fi

$(MLI_OBJ) : %.cmi : %.mli
	@echo Compiling Header $*
	@ocamlc $(OC_FLAGS) -c $<

$(ML_OPT) : %.cmx : %.ml
	@echo Compiling Optimized $*
	@if [ -f $*.mli ] ; then ocamlopt $(OOPT_FLAGS) -c $*.mli $<; \
	else ocamlopt $(OOPT_FLAGS) -c $<; fi

$(MLI_OPT) : %.cmxi : %.mli
	@echo Compiling Optimized Header $*
	@ocamlc $(OC_FLAGS) -c $<

$(YACC_SOURCE) : %.ml : %.mly
	@echo Building $*
	@ocamlyacc $<

$(LEX_SOURCE) : %.ml : %.mll
	@echo Building $*
	@ocamllex $<

dbtoaster_top: $(OBJ_DEPS)
	@echo Linking dbtoaster_top
	@ocamlmktop $(OC_FLAGS) -o dbtoaster_top $(ML_OBJ)

dbtoaster: $(OBJ_DEPS) Driver.ml
	@echo Linking dbtoaster
	@ocamlc $(OC_FLAGS) -o dbtoaster $(ML_OBJ) Driver.ml

benchmark: $(OPT_DEPS)
	ocamlopt $(OOPT_FLAGS) -o m3_ex $(ML_OPT) test/unit/m3_ex.ml

vwap: $(OPT_DEPS)
	ocamlopt $(OOPT_FLAGS) -ccopt -O3 -o vwap $(ML_OPT) test/examples/vwap_m3_ex.ml

test/sql/%: test/sql/%.sql dbtoaster
	./dbtoaster $< -c test/sql/$* -o test/sql/$*.ml -d compile-with-gdb

test: top
	@./dbtoaster_top $(INCLUDE_DIR) test/unit/compiler.ml
	@./dbtoaster_top $(INCLUDE_DIR) test/unit/m3_ex.ml

query: $(OPT_DEPS) query.ml
	ocamlopt $(OOPT_FLAGS) -ccopt -O3 -nodynlink -unsafe -noassert -o query str.cmxa unix.cmxa $(ML_OPT) query.ml

clean:
	rm -f $(CLEAN_OBJ)
	for i in test/sql/*.sql; do bn=`basename $$i .sql`; \
		for j in .ml .cmo .cmi .cmx .cmxi .o ""; do rm -f test/sql/$$bn$$j; done;\
	done

##################### DEPENDENCIES #####################

lib/ocaml/StandardAdaptors.cmo : lib/ocaml/SliceableMap.cmo M3.cmo
lib/ocaml/StandardAdaptors.cmx : lib/ocaml/SliceableMap.cmx M3.cmx
parser/Sqlparser.cmo : Calculus.cmo M3.cmo
parser/Sqlparser.cmx : Calculus.cmx M3.cmx
parser/Sqllexer.cmo : Calculus.cmo M3.cmo
parser/Sqllexer.cmx : Calculus.cmx M3.cmx
M3Compiler.cmo : M3Codegen.cmi
M3Compiler.cmx : M3Codegen.cmxi
M3Codegen.cmi : M3Common.cmo
M3Codegen.cmxi : M3Common.cmx
CalcToM3.cmo : Compiler.cmo M3.cmo
CalcToM3.cmx : Compiler.cmx M3.cmx
M3Common.cmo : M3.cmo
M3Common.cmx : M3.cmx
M3.cmo : Util.cmo
M3.cmx : Util.cmx
Compiler.cmo : Calculus.cmo
Compiler.cmx : Calculus.cmx
Calculus.cmo : Ring.cmo
Calculus.cmx : Ring.cmx
