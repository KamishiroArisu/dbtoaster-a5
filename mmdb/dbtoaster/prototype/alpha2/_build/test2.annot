"test2.ml" 4 27 31 "test2.ml" 4 27 32
type(
  [> `Relation of string * (string * string) list ]
)
"test2.ml" 4 27 45 "test2.ml" 4 27 48
type(
  string
)
"test2.ml" 4 27 52 "test2.ml" 4 27 55
type(
  string
)
"test2.ml" 4 27 57 "test2.ml" 4 27 62
type(
  string
)
"test2.ml" 4 27 51 "test2.ml" 4 27 63
type(
  string * string
)
"test2.ml" 4 27 66 "test2.ml" 4 27 69
type(
  string
)
"test2.ml" 4 27 71 "test2.ml" 4 27 76
type(
  string
)
"test2.ml" 4 27 65 "test2.ml" 4 27 77
type(
  string * string
)
"test2.ml" 4 27 50 "test2.ml" 4 27 78
type(
  (string * string) list
)
"test2.ml" 4 27 44 "test2.ml" 4 27 79
type(
  string * (string * string) list
)
"test2.ml" 4 27 35 "test2.ml" 4 27 79
type(
  [> `Relation of string * (string * string) list ] as 'a
)
"test2.ml" 5 80 84 "test2.ml" 5 80 85
type(
  [> `Relation of string * (string * string) list ]
)
"test2.ml" 5 80 98 "test2.ml" 5 80 101
type(
  string
)
"test2.ml" 5 80 105 "test2.ml" 5 80 108
type(
  string
)
"test2.ml" 5 80 110 "test2.ml" 5 80 115
type(
  string
)
"test2.ml" 5 80 104 "test2.ml" 5 80 116
type(
  string * string
)
"test2.ml" 5 80 119 "test2.ml" 5 80 122
type(
  string
)
"test2.ml" 5 80 124 "test2.ml" 5 80 129
type(
  string
)
"test2.ml" 5 80 118 "test2.ml" 5 80 130
type(
  string * string
)
"test2.ml" 5 80 103 "test2.ml" 5 80 131
type(
  (string * string) list
)
"test2.ml" 5 80 97 "test2.ml" 5 80 132
type(
  string * (string * string) list
)
"test2.ml" 5 80 88 "test2.ml" 5 80 132
type(
  [> `Relation of string * (string * string) list ] as 'a
)
"test2.ml" 6 133 137 "test2.ml" 6 133 138
type(
  [> `Relation of string * (string * string) list ]
)
"test2.ml" 6 133 151 "test2.ml" 6 133 154
type(
  string
)
"test2.ml" 6 133 158 "test2.ml" 6 133 161
type(
  string
)
"test2.ml" 6 133 163 "test2.ml" 6 133 168
type(
  string
)
"test2.ml" 6 133 157 "test2.ml" 6 133 169
type(
  string * string
)
"test2.ml" 6 133 172 "test2.ml" 6 133 175
type(
  string
)
"test2.ml" 6 133 177 "test2.ml" 6 133 182
type(
  string
)
"test2.ml" 6 133 171 "test2.ml" 6 133 183
type(
  string * string
)
"test2.ml" 6 133 156 "test2.ml" 6 133 184
type(
  (string * string) list
)
"test2.ml" 6 133 150 "test2.ml" 6 133 185
type(
  string * (string * string) list
)
"test2.ml" 6 133 141 "test2.ml" 6 133 185
type(
  [> `Relation of string * (string * string) list ] as 'a
)
"test2.ml" 8 187 191 "test2.ml" 8 187 192
type(
  [> `Cross of
       [> `Cross of
            [> `Relation of string * (string * string) list ] *
            [> `Relation of string * (string * string) list ] ] *
       [> `Relation of string * (string * string) list ] ]
)
"test2.ml" 8 187 209 "test2.ml" 8 187 210
type(
  [> `Relation of string * (string * string) list ] as 'a
)
"test2.ml" 8 187 212 "test2.ml" 8 187 213
type(
  [> `Relation of string * (string * string) list ] as 'b
)
"test2.ml" 8 187 208 "test2.ml" 8 187 214
type(
  'a * 'b
)
"test2.ml" 8 187 202 "test2.ml" 8 187 214
type(
  [> `Cross of 'a * 'b ] as 'c
)
"test2.ml" 8 187 216 "test2.ml" 8 187 217
type(
  [> `Relation of string * (string * string) list ] as 'd
)
"test2.ml" 8 187 201 "test2.ml" 8 187 218
type(
  'c * 'd
)
"test2.ml" 8 187 195 "test2.ml" 8 187 218
type(
  [> `Cross of 'c * 'd ] as 'e
)
"test2.ml" 9 219 223 "test2.ml" 9 219 225
type(
  [> `NaturalJoin of
       [> `Relation of string * (string * string) list ] *
       [> `NaturalJoin of
            [> `Relation of string * (string * string) list ] *
            [> `Relation of string * (string * string) list ] ] ]
)
"test2.ml" 9 219 241 "test2.ml" 9 219 242
type(
  [> `Relation of string * (string * string) list ] as 'a
)
"test2.ml" 9 219 258 "test2.ml" 9 219 259
type(
  [> `Relation of string * (string * string) list ] as 'b
)
"test2.ml" 9 219 261 "test2.ml" 9 219 262
type(
  [> `Relation of string * (string * string) list ] as 'c
)
"test2.ml" 9 219 257 "test2.ml" 9 219 263
type(
  'b * 'c
)
"test2.ml" 9 219 244 "test2.ml" 9 219 263
type(
  [> `NaturalJoin of 'b * 'c ] as 'd
)
"test2.ml" 9 219 240 "test2.ml" 9 219 264
type(
  'a * 'd
)
"test2.ml" 9 219 228 "test2.ml" 9 219 264
type(
  [> `NaturalJoin of 'a * 'd ] as 'e
)
"test2.ml" 11 266 270 "test2.ml" 11 266 276
type(
  [> `And of
       [> `BTerm of
            [> `EQ of
                 [> `ETerm of
                      [> `Attribute of [> `Qualified of string * string ] ] ] *
                 [> `ETerm of
                      [> `Attribute of [> `Qualified of string * string ] ] ] ] ] *
       [> `BTerm of
            [> `EQ of
                 [> `ETerm of
                      [> `Attribute of [> `Qualified of string * string ] ] ] *
                 [> `ETerm of
                      [> `Attribute of [> `Qualified of string * string ] ] ] ] ] ]
)
"test2.ml" 15 307 343 "test2.ml" 15 307 346
type(
  string
)
"test2.ml" 15 307 348 "test2.ml" 15 307 351
type(
  string
)
"test2.ml" 15 307 342 "test2.ml" 15 307 352
type(
  string * string
)
"test2.ml" 15 307 331 "test2.ml" 15 307 353
type(
  [> `Qualified of string * string ] as 'a
)
"test2.ml" 15 307 320 "test2.ml" 15 307 354
type(
  [> `Attribute of 'a ] as 'b
)
"test2.ml" 15 307 313 "test2.ml" 15 307 355
type(
  [> `ETerm of 'b ] as 'c
)
"test2.ml" 16 358 394 "test2.ml" 16 358 397
type(
  string
)
"test2.ml" 16 358 399 "test2.ml" 16 358 402
type(
  string
)
"test2.ml" 16 358 393 "test2.ml" 16 358 403
type(
  string * string
)
"test2.ml" 16 358 382 "test2.ml" 16 358 404
type(
  [> `Qualified of string * string ] as 'd
)
"test2.ml" 16 358 371 "test2.ml" 16 358 405
type(
  [> `Attribute of 'd ] as 'e
)
"test2.ml" 16 358 364 "test2.ml" 16 358 406
type(
  [> `ETerm of 'e ] as 'f
)
"test2.ml" 14 300 305 "test2.ml" 17 407 417
type(
  'c * 'f
)
"test2.ml" 13 287 298 "test2.ml" 18 419 425
type(
  [> `EQ of 'c * 'f ] as 'g
)
"test2.ml" 13 287 292 "test2.ml" 18 419 425
type(
  [> `BTerm of 'g ] as 'h
)
"test2.ml" 21 454 490 "test2.ml" 21 454 493
type(
  string
)
"test2.ml" 21 454 495 "test2.ml" 21 454 498
type(
  string
)
"test2.ml" 21 454 489 "test2.ml" 21 454 499
type(
  string * string
)
"test2.ml" 21 454 478 "test2.ml" 21 454 500
type(
  [> `Qualified of string * string ] as 'i
)
"test2.ml" 21 454 467 "test2.ml" 21 454 501
type(
  [> `Attribute of 'i ] as 'j
)
"test2.ml" 21 454 460 "test2.ml" 21 454 502
type(
  [> `ETerm of 'j ] as 'k
)
"test2.ml" 22 504 540 "test2.ml" 22 504 543
type(
  string
)
"test2.ml" 22 504 545 "test2.ml" 22 504 548
type(
  string
)
"test2.ml" 22 504 539 "test2.ml" 22 504 549
type(
  string * string
)
"test2.ml" 22 504 528 "test2.ml" 22 504 550
type(
  [> `Qualified of string * string ] as 'l
)
"test2.ml" 22 504 517 "test2.ml" 22 504 551
type(
  [> `Attribute of 'l ] as 'm
)
"test2.ml" 22 504 510 "test2.ml" 22 504 552
type(
  [> `ETerm of 'm ] as 'n
)
"test2.ml" 20 440 452 "test2.ml" 23 553 563
type(
  'k * 'n
)
"test2.ml" 19 427 438 "test2.ml" 24 564 571
type(
  [> `EQ of 'k * 'n ] as 'o
)
"test2.ml" 19 427 432 "test2.ml" 24 564 571
type(
  [> `BTerm of 'o ] as 'p
)
"test2.ml" 12 280 285 "test2.ml" 25 572 574
type(
  'h * 'p
)
"test2.ml" 12 280 281 "test2.ml" 25 572 574
type(
  [> `And of 'h * 'p ] as 'q
)
"test2.ml" 26 575 579 "test2.ml" 26 575 582
type(
  [> `Select of
       [> `And of
            [> `BTerm of
                 [> `EQ of
                      [> `ETerm of
                           [> `Attribute of
                                [> `Qualified of string * string ] ] ] *
                      [> `ETerm of
                           [> `Attribute of
                                [> `Qualified of string * string ] ] ] ] ] *
            [> `BTerm of
                 [> `EQ of
                      [> `ETerm of
                           [> `Attribute of
                                [> `Qualified of string * string ] ] ] *
                      [> `ETerm of
                           [> `Attribute of
                                [> `Qualified of string * string ] ] ] ] ] ] *
       [> `Cross of
            [> `Cross of
                 [> `Relation of string * (string * string) list ] *
                 [> `Relation of string * (string * string) list ] ] *
            [> `Relation of string * (string * string) list ] ] ]
)
"test2.ml" 26 575 593 "test2.ml" 26 575 599
type(
  [> `And of
       [> `BTerm of
            [> `EQ of
                 [> `ETerm of
                      [> `Attribute of [> `Qualified of string * string ] ] ] *
                 [> `ETerm of
                      [> `Attribute of [> `Qualified of string * string ] ] ] ] ] *
       [> `BTerm of
            [> `EQ of
                 [> `ETerm of
                      [> `Attribute of [> `Qualified of string * string ] ] ] *
                 [> `ETerm of
                      [> `Attribute of [> `Qualified of string * string ] ] ] ] ] ]
  as 'a
)
"test2.ml" 26 575 601 "test2.ml" 26 575 602
type(
  [> `Cross of
       [> `Cross of
            [> `Relation of string * (string * string) list ] *
            [> `Relation of string * (string * string) list ] ] *
       [> `Relation of string * (string * string) list ] ]
  as 'b
)
"test2.ml" 26 575 592 "test2.ml" 26 575 603
type(
  'a * 'b
)
"test2.ml" 26 575 585 "test2.ml" 26 575 603
type(
  [> `Select of 'a * 'b ] as 'c
)
"test2.ml" 28 605 609 "test2.ml" 28 605 615
type(
  [> `MapAggregate of
       [> `Sum ] *
       [> `Product of
            [> `METerm of
                 [> `Attribute of [> `Qualified of string * string ] ] ] *
            [> `METerm of
                 [> `Attribute of [> `Qualified of string * string ] ] ] ] *
       [> `Select of
            [> `And of
                 [> `BTerm of
                      [> `EQ of
                           [> `ETerm of
                                [> `Attribute of
                                     [> `Qualified of string * string ] ] ] *
                           [> `ETerm of
                                [> `Attribute of
                                     [> `Qualified of string * string ] ] ] ] ] *
                 [> `BTerm of
                      [> `EQ of
                           [> `ETerm of
                                [> `Attribute of
                                     [> `Qualified of string * string ] ] ] *
                           [> `ETerm of
                                [> `Attribute of
                                     [> `Qualified of string * string ] ] ] ] ] ] *
            [> `Cross of
                 [> `Cross of
                      [> `Relation of string * (string * string) list ] *
                      [> `Relation of string * (string * string) list ] ] *
                 [> `Relation of string * (string * string) list ] ] ] ]
)
"test2.ml" 30 639 641 "test2.ml" 30 639 645
type(
  [> `Sum ] as 'a
)
"test2.ml" 32 660 696 "test2.ml" 32 660 699
type(
  string
)
"test2.ml" 32 660 701 "test2.ml" 32 660 704
type(
  string
)
"test2.ml" 32 660 695 "test2.ml" 32 660 705
type(
  string * string
)
"test2.ml" 32 660 684 "test2.ml" 32 660 706
type(
  [> `Qualified of string * string ] as 'b
)
"test2.ml" 32 660 673 "test2.ml" 32 660 707
type(
  [> `Attribute of 'b ] as 'c
)
"test2.ml" 32 660 666 "test2.ml" 32 660 707
type(
  [> `METerm of 'c ] as 'd
)
"test2.ml" 33 709 745 "test2.ml" 33 709 748
type(
  string
)
"test2.ml" 33 709 750 "test2.ml" 33 709 753
type(
  string
)
"test2.ml" 33 709 744 "test2.ml" 33 709 754
type(
  string * string
)
"test2.ml" 33 709 733 "test2.ml" 33 709 755
type(
  [> `Qualified of string * string ] as 'e
)
"test2.ml" 33 709 722 "test2.ml" 33 709 756
type(
  [> `Attribute of 'e ] as 'f
)
"test2.ml" 33 709 715 "test2.ml" 33 709 756
type(
  [> `METerm of 'f ] as 'g
)
"test2.ml" 31 648 658 "test2.ml" 34 757 760
type(
  'd * 'g
)
"test2.ml" 31 648 650 "test2.ml" 34 757 760
type(
  [> `Product of 'd * 'g ] as 'h
)
"test2.ml" 35 762 764 "test2.ml" 35 762 767
type(
  [> `Select of
       [> `And of
            [> `BTerm of
                 [> `EQ of
                      [> `ETerm of
                           [> `Attribute of
                                [> `Qualified of string * string ] ] ] *
                      [> `ETerm of
                           [> `Attribute of
                                [> `Qualified of string * string ] ] ] ] ] *
            [> `BTerm of
                 [> `EQ of
                      [> `ETerm of
                           [> `Attribute of
                                [> `Qualified of string * string ] ] ] *
                      [> `ETerm of
                           [> `Attribute of
                                [> `Qualified of string * string ] ] ] ] ] ] *
       [> `Cross of
            [> `Cross of
                 [> `Relation of string * (string * string) list ] *
                 [> `Relation of string * (string * string) list ] ] *
            [> `Relation of string * (string * string) list ] ] ]
  as 'i
)
"test2.ml" 29 619 637 "test2.ml" 36 768 774
type(
  'a * 'h * 'i
)
"test2.ml" 29 619 624 "test2.ml" 36 768 774
type(
  [> `MapAggregate of 'a * 'h * 'i ] as 'j
)
"test2.ml" 39 779 783 "test2.ml" 39 779 798
type(
  string -> unit
)
"test2.ml" 39 779 799 "test2.ml" 39 779 801
type(
  string
)
"test2.ml" 40 805 806 "test2.ml" 40 805 819
type(
  string -> unit
)
"test2.ml" 40 805 822 "test2.ml" 40 805 833
type(
  int -> char -> string
)
"test2.ml" 40 805 834 "test2.ml" 40 805 836
type(
  int
)
"test2.ml" 40 805 837 "test2.ml" 40 805 840
type(
  char
)
"test2.ml" 40 805 821 "test2.ml" 40 805 841
type(
  string
)
"test2.ml" 40 805 841 "test2.ml" 40 805 842
type(
  string -> string -> string
)
"test2.ml" 40 805 842 "test2.ml" 40 805 848
type(
  string
)
"test2.ml" 40 805 848 "test2.ml" 40 805 849
type(
  string -> string -> string
)
"test2.ml" 40 805 849 "test2.ml" 40 805 851
type(
  string
)
"test2.ml" 40 805 851 "test2.ml" 40 805 852
type(
  string -> string -> string
)
"test2.ml" 40 805 852 "test2.ml" 40 805 863
type(
  string
)
"test2.ml" 40 805 863 "test2.ml" 40 805 864
type(
  string -> string -> string
)
"test2.ml" 40 805 865 "test2.ml" 40 805 876
type(
  int -> char -> string
)
"test2.ml" 40 805 877 "test2.ml" 40 805 879
type(
  int
)
"test2.ml" 40 805 880 "test2.ml" 40 805 883
type(
  char
)
"test2.ml" 40 805 864 "test2.ml" 40 805 884
type(
  string
)
"test2.ml" 40 805 852 "test2.ml" 40 805 884
type(
  string
)
"test2.ml" 40 805 849 "test2.ml" 40 805 884
type(
  string
)
"test2.ml" 40 805 842 "test2.ml" 40 805 884
type(
  string
)
"test2.ml" 40 805 820 "test2.ml" 40 805 885
type(
  string
)
"test2.ml" 40 805 806 "test2.ml" 40 805 885
type(
  unit
)
"test2.ml" 41 888 888 "test2.ml" 41 888 903
type(
  string -> unit
)
"test2.ml" 41 888 904 "test2.ml" 41 888 915
type(
  string
)
"test2.ml" 41 888 888 "test2.ml" 41 888 915
type(
  unit
)
"test2.ml" 42 917 917 "test2.ml" 42 917 930
type(
  string -> unit
)
"test2.ml" 42 917 932 "test2.ml" 42 917 956
type(
  (_[< `Delta of _[< `Delete of string | `Insert of string ] * 'a
     | `Incr of string * 'a
     | `Init of string * 'a
     | `METerm of
         _[< `Attribute of
               _[< `Qualified of string * string | `Unqualified of string
                 > `Qualified ]
           | `Float of float
           | `Int of int
           | `Long of int64
           | `String of string
           | `Variable of string
           > `Attribute ]
     | `MapAggregate of
         _[< `Min | `Sum > `Sum ] * 'a *
         (_[< `Cross of 'b * 'b
            | `DeltaPlan of _[< `Delete of string | `Insert of string ] * 'b
            | `EmptySet
            | `IncrPlan of 'b
            | `Join of
                (_[< `And of 'c * 'c
                   | `BTerm of
                       _[< `EQ of
                             (_[< `Divide of 'd * 'd
                                | `ETerm of
                                    _[< `Attribute of
                                          _[< `Qualified of string * string
                                            | `Unqualified of string
                                            > `Qualified ]
                                      | `Float of float
                                      | `Int of int
                                      | `Long of int64
                                      | `String of string
                                      | `Variable of string
                                      > `Attribute ]
                                | `Function of string * 'd list
                                | `Minus of 'd * 'd
                                | `Product of 'd * 'd
                                | `Sum of 'd * 'd
                                | `UnaryMinus of 'd
                                > `ETerm ]
                              as 'd) *
                             (_[< `Divide of 'e * 'e
                                | `ETerm of
                                    _[< `Attribute of
                                          _[< `Qualified of string * string
                                            | `Unqualified of string
                                            > `Qualified ]
                                      | `Float of float
                                      | `Int of int
                                      | `Long of int64
                                      | `String of string
                                      | `Variable of string
                                      > `Attribute ]
                                | `Function of string * 'e list
                                | `Minus of 'e * 'e
                                | `Product of 'e * 'e
                                | `Sum of 'e * 'e
                                | `UnaryMinus of 'e
                                > `ETerm ]
                              as 'e)
                         | `False
                         | `GE of
                             (_[< `Divide of 'f * 'f
                                | `ETerm of
                                    _[< `Attribute of
                                          _[< `Qualified of string * string
                                            | `Unqualified of string ]
                                      | `Float of float
                                      | `Int of int
                                      | `Long of int64
                                      | `String of string
                                      | `Variable of string ]
                                | `Function of string * 'f list
                                | `Minus of 'f * 'f
                                | `Product of 'f * 'f
                                | `Sum of 'f * 'f
                                | `UnaryMinus of 'f ]
                              as 'f) *
                             (_[< `Divide of 'g * 'g
                                | `ETerm of
                                    _[< `Attribute of
                                          _[< `Qualified of string * string
                                            | `Unqualified of string ]
                                      | `Float of float
                                      | `Int of int
                                      | `Long of int64
                                      | `String of string
                                      | `Variable of string ]
                                | `Function of string * 'g list
                                | `Minus of 'g * 'g
                                | `Product of 'g * 'g
                                | `Sum of 'g * 'g
                                | `UnaryMinus of 'g ]
                              as 'g)
                         | `GT of
                             (_[< `Divide of 'h * 'h
                                | `ETerm of
                                    _[< `Attribute of
                                          _[< `Qualified of string * string
                                            | `Unqualified of string ]
                                      | `Float of float
                                      | `Int of int
                                      | `Long of int64
                                      | `String of string
                                      | `Variable of string ]
                                | `Function of string * 'h list
                                | `Minus of 'h * 'h
                                | `Product of 'h * 'h
                                | `Sum of 'h * 'h
                                | `UnaryMinus of 'h ]
                              as 'h) *
                             (_[< `Divide of 'i * 'i
                                | `ETerm of
                                    _[< `Attribute of
                                          _[< `Qualified of string * string
                                            | `Unqualified of string ]
                                      | `Float of float
                                      | `Int of int
                                      | `Long of int64
                                      | `String of string
                                      | `Variable of string ]
                                | `Function of string * 'i list
                                | `Minus of 'i * 'i
                                | `Product of 'i * 'i
                                | `Sum of 'i * 'i
                                | `UnaryMinus of 'i ]
                              as 'i)
                         | `LE of
                             (_[< `Divide of 'j * 'j
                                | `ETerm of
                                    _[< `Attribute of
                                          _[< `Qualified of string * string
                                            | `Unqualified of string ]
                                      | `Float of float
                                      | `Int of int
                                      | `Long of int64
                                      | `String of string
                                      | `Variable of string ]
                                | `Function of string * 'j list
                                | `Minus of 'j * 'j
                                | `Product of 'j * 'j
                                | `Sum of 'j * 'j
                                | `UnaryMinus of 'j ]
                              as 'j) *
                             (_[< `Divide of 'k * 'k
                                | `ETerm of
                                    _[< `Attribute of
                                          _[< `Qualified of string * string
                                            | `Unqualified of string ]
                                      | `Float of float
                                      | `Int of int
                                      | `Long of int64
                                      | `String of string
                                      | `Variable of string ]
                                | `Function of string * 'k list
                                | `Minus of 'k * 'k
                                | `Product of 'k * 'k
                                | `Sum of 'k * 'k
                                | `UnaryMinus of 'k ]
                              as 'k)
                         | `LT of
                             (_[< `Divide of 'l * 'l
                                | `ETerm of
                                    _[< `Attribute of
                                          _[< `Qualified of string * string
                                            | `Unqualified of string ]
                                      | `Float of float
                                      | `Int of int
                                      | `Long of int64
                                      | `String of string
                                      | `Variable of string ]
                                | `Function of string * 'l list
                                | `Minus of 'l * 'l
                                | `Product of 'l * 'l
                                | `Sum of 'l * 'l
                                | `UnaryMinus of 'l ]
                              as 'l) *
                             (_[< `Divide of 'm * 'm
                                | `ETerm of
                                    _[< `Attribute of
                                          _[< `Qualified of string * string
                                            | `Unqualified of string ]
                                      | `Float of float
                                      | `Int of int
                                      | `Long of int64
                                      | `String of string
                                      | `Variable of string ]
                                | `Function of string * 'm list
                                | `Minus of 'm * 'm
                                | `Product of 'm * 'm
                                | `Sum of 'm * 'm
                                | `UnaryMinus of 'm ]
                              as 'm)
                         | `MEQ of 'a
                         | `MLT of 'a
                         | `NE of
                             (_[< `Divide of 'n * 'n
                                | `ETerm of
                                    _[< `Attribute of
                                          _[< `Qualified of string * string
                                            | `Unqualified of string ]
                                      | `Float of float
                                      | `Int of int
                                      | `Long of int64
                                      | `String of string
                                      | `Variable of string ]
                                | `Function of string * 'n list
                                | `Minus of 'n * 'n
                                | `Product of 'n * 'n
                                | `Sum of 'n * 'n
                                | `UnaryMinus of 'n ]
                              as 'n) *
                             (_[< `Divide of 'o * 'o
                                | `ETerm of
                                    _[< `Attribute of
                                          _[< `Qualified of string * string
                                            | `Unqualified of string ]
                                      | `Float of float
                                      | `Int of int
                                      | `Long of int64
                                      | `String of string
                                      | `Variable of string ]
                                | `Function of string * 'o list
                                | `Minus of 'o * 'o
                                | `Product of 'o * 'o
                                | `Sum of 'o * 'o
                                | `UnaryMinus of 'o ]
                              as 'o)
                         | `True
                         > `EQ ]
                   | `Not of 'c
                   | `Or of 'c * 'c
                   > `And `BTerm ]
                 as 'c) *
                'b * 'b
            | `NaturalJoin of 'b * 'b
            | `NewPlan of 'b
            | `Project of
                (_[< `Qualified of string * string | `Unqualified of string ] *
                 (_[< `Divide of 'p * 'p
                    | `ETerm of
                        _[< `Attribute of
                              _[< `Qualified of string * string
                                | `Unqualified of string ]
                          | `Float of float
                          | `Int of int
                          | `Long of int64
                          | `String of string
                          | `Variable of string ]
                    | `Function of string * 'p list
                    | `Minus of 'p * 'p
                    | `Product of 'p * 'p
                    | `Sum of 'p * 'p
                    | `UnaryMinus of 'p ]
                  as 'p))
                list * 'b
            | `Relation of string * (string * string) list
            | `Rename of
                (_[< `Qualified of string * string | `Unqualified of string ] *
                 _[< `Qualified of string * string | `Unqualified of string ])
                list * 'b
            | `Select of 'c * 'b
            | `TupleRelation of string * (string * string) list
            | `Union of 'b list
            > `Cross `Relation `Select ]
          as 'b)
     | `Min of 'a * 'a
     | `New of 'a
     | `Product of 'a * 'a
     | `Sum of 'a * 'a
     > `METerm `MapAggregate `Product ]
   as 'a) ->
  string
)
"test2.ml" 42 917 957 "test2.ml" 42 917 963
type(
  'a
)
"test2.ml" 42 917 931 "test2.ml" 42 917 964
type(
  string
)
"test2.ml" 42 917 917 "test2.ml" 42 917 964
type(
  unit
)
"test2.ml" 44 967 967 "test2.ml" 44 967 982
type(
  string -> unit
)
"test2.ml" 44 967 983 "test2.ml" 44 967 997
type(
  string
)
"test2.ml" 44 967 967 "test2.ml" 44 967 997
type(
  unit
)
"test2.ml" 45 999 1004 "test2.ml" 45 999 1005
type(
  Algebra.map_expression
)
"test2.ml" 45 999 1006 "test2.ml" 45 999 1007
type(
  Algebra.binding list
)
"test2.ml" 45 999 1003 "test2.ml" 45 999 1008
type(
  Algebra.map_expression * Algebra.binding list
)
"test2.ml" 45 999 1010 "test2.ml" 45 999 1024
type(
  Algebra.map_expression ->
  Algebra.delta -> Algebra.map_expression * Algebra.binding list
)
"test2.ml" 45 999 1025 "test2.ml" 45 999 1031
type(
  Algebra.map_expression
)
"test2.ml" 45 999 1040 "test2.ml" 45 999 1043
type(
  Algebra.relation_identifier
)
"test2.ml" 45 999 1031 "test2.ml" 45 999 1044
type(
  Algebra.delta
)
"test2.ml" 45 999 1010 "test2.ml" 45 999 1044
type(
  Algebra.map_expression * Algebra.binding list
)
"test2.ml" 46 1048 1052 "test2.ml" 46 1048 1074
type(
  Algebra.map_expression * Algebra.binding list -> unit
)
"test2.ml" 46 1048 1076 "test2.ml" 46 1048 1077
type(
  Algebra.map_expression
)
"test2.ml" 46 1048 1078 "test2.ml" 46 1048 1079
type(
  Algebra.binding list
)
"test2.ml" 46 1048 1075 "test2.ml" 46 1048 1080
type(
  Algebra.map_expression * Algebra.binding list
)
"test2.ml" 46 1048 1052 "test2.ml" 46 1048 1080
type(
  unit
)
"test2.ml" 45 999 999 "test2.ml" 46 1048 1080
type(
  unit
)
"test2.ml" 44 967 967 "test2.ml" 46 1048 1080
type(
  unit
)
"test2.ml" 42 917 917 "test2.ml" 46 1048 1080
type(
  unit
)
"test2.ml" 41 888 888 "test2.ml" 46 1048 1080
type(
  unit
)
"test2.ml" 49 1085 1089 "test2.ml" 49 1085 1095
type(
  (Algebra.delta * (Algebra.map_expression * Algebra.binding list) list) list
)
"test2.ml" 49 1085 1098 "test2.ml" 49 1085 1116
type(
  Algebra.map_expression ->
  (Algebra.delta * (Algebra.map_expression * Algebra.binding list) list) list
)
"test2.ml" 49 1085 1117 "test2.ml" 49 1085 1123
type(
  Algebra.map_expression
)
"test2.ml" 49 1085 1098 "test2.ml" 49 1085 1123
type(
  (Algebra.delta * (Algebra.map_expression * Algebra.binding list) list) list
)
"test2.ml" 50 1127 1128 "test2.ml" 50 1127 1137
type(
  (Algebra.delta * (Algebra.map_expression * Algebra.binding list) list ->
   unit) ->
  (Algebra.delta * (Algebra.map_expression * Algebra.binding list) list) list ->
  unit
)
"test2.ml" 51 1139 1150 "test2.ml" 51 1139 1155
type(
  Algebra.delta
)
"test2.ml" 51 1139 1157 "test2.ml" 51 1139 1158
type(
  (Algebra.map_expression * Algebra.binding list) list
)
"test2.ml" 51 1139 1149 "test2.ml" 51 1139 1159
type(
  Algebra.delta * (Algebra.map_expression * Algebra.binding list) list
)
"test2.ml" 52 1164 1166 "test2.ml" 52 1164 1179
type(
  string -> unit
)
"test2.ml" 52 1164 1181 "test2.ml" 52 1164 1193
type(
  string
)
"test2.ml" 52 1164 1193 "test2.ml" 52 1164 1194
type(
  string -> Algebra.relation_identifier -> string
)
"test2.ml" 52 1164 1195 "test2.ml" 52 1164 1210
type(
  Algebra.delta -> Algebra.relation_identifier
)
"test2.ml" 52 1164 1211 "test2.ml" 52 1164 1216
type(
  Algebra.delta
)
"test2.ml" 52 1164 1194 "test2.ml" 52 1164 1217
type(
  Algebra.relation_identifier
)
"test2.ml" 52 1164 1180 "test2.ml" 52 1164 1218
type(
  string
)
"test2.ml" 52 1164 1166 "test2.ml" 52 1164 1218
type(
  unit
)
"test2.ml" 53 1220 1222 "test2.ml" 53 1220 1231
type(
  (Algebra.map_expression * Algebra.binding list -> unit) ->
  (Algebra.map_expression * Algebra.binding list) list -> unit
)
"test2.ml" 54 1233 1245 "test2.ml" 54 1233 1246
type(
  Algebra.map_expression
)
"test2.ml" 54 1233 1248 "test2.ml" 54 1233 1249
type(
  Algebra.binding list
)
"test2.ml" 54 1233 1244 "test2.ml" 54 1233 1250
type(
  Algebra.map_expression * Algebra.binding list
)
"test2.ml" 54 1233 1254 "test2.ml" 54 1233 1276
type(
  Algebra.map_expression * Algebra.binding list -> unit
)
"test2.ml" 54 1233 1278 "test2.ml" 54 1233 1279
type(
  Algebra.map_expression
)
"test2.ml" 54 1233 1280 "test2.ml" 54 1233 1281
type(
  Algebra.binding list
)
"test2.ml" 54 1233 1277 "test2.ml" 54 1233 1282
type(
  Algebra.map_expression * Algebra.binding list
)
"test2.ml" 54 1233 1254 "test2.ml" 54 1233 1282
type(
  unit
)
"test2.ml" 54 1233 1239 "test2.ml" 54 1233 1283
type(
  Algebra.map_expression * Algebra.binding list -> unit
)
"test2.ml" 54 1233 1284 "test2.ml" 54 1233 1285
type(
  (Algebra.map_expression * Algebra.binding list) list
)
"test2.ml" 53 1220 1222 "test2.ml" 54 1233 1285
type(
  unit
)
"test2.ml" 55 1287 1289 "test2.ml" 55 1287 1302
type(
  string -> unit
)
"test2.ml" 55 1287 1303 "test2.ml" 55 1287 1309
type(
  string
)
"test2.ml" 55 1287 1289 "test2.ml" 55 1287 1309
type(
  unit
)
"test2.ml" 53 1220 1222 "test2.ml" 55 1287 1309
type(
  unit
)
"test2.ml" 52 1164 1166 "test2.ml" 55 1287 1309
type(
  unit
)
"test2.ml" 51 1139 1144 "test2.ml" 56 1310 1316
type(
  Algebra.delta * (Algebra.map_expression * Algebra.binding list) list ->
  unit
)
"test2.ml" 56 1310 1317 "test2.ml" 56 1310 1323
type(
  (Algebra.delta * (Algebra.map_expression * Algebra.binding list) list) list
)
"test2.ml" 50 1127 1128 "test2.ml" 56 1310 1323
type(
  unit
)
"test2.ml" 49 1085 1085 "test2.ml" 56 1310 1323
type(
  unit
)
