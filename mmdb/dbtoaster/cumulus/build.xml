<project name="Cumulus" default="main" basedir=".">
  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
    <classpath><pathelement location="lib/ant-contrib-1.0b3.jar" /></classpath>
  </taskdef>
  
  <property name="src"   location="src" />
  <property name="build" location="build" />
  <property name="bin"   location="bin" />
  <property name="jar"   location="${bin}/cumulus.jar" />
  <property name="bootjar" location="${bin}/bootstrap.jar" />
  
  <target name="init">
    <!-- 
      To deal with heterogeneous site installations, we clone each compile into a site-specific
      copy.  Properties are read from local.properties, and can be overridden on a per-site basis
      by creating a file called X.properties, where X is the first dotted component of the site's
      hostname.
      
      To build for a non-local site, specify -Dhostname=X on the command line.
    -->
    <if>
      <not><isset property="hostname" /></not>
      <then>
        <exec executable="hostname" outputproperty="hostname.full"/>
        <propertyregex property="hostname" input="${hostname.full}" regexp="^([^.]*)(\..*)?" select="\1" />
      </then>
    </if>
    <if>
      <available file="${hostname}.properties" />
      <then>
        <echo message="Using: ${hostname}.properties" />
        <property file="${hostname}.properties" />
      </then>
    </if>
    <property file="local.properties" />
    
    <!-- Of course, it's possible that the properties file doesn't exist yet.  Fix that. -->
    <if>
      <not><isset property="cumulus.home" /></not>
      <then>
        <echo file="local.properties">
jruby.home    = /home/fs01/oak5/src/jruby-1.4.0
cumulus.home  = /home/fs01/oak5/dbtoaster/cumulus
compiler.home = /home/fs01/oak5/dbtoaster/prototype/compiler/alpha3
</echo>
        <fail message="Properties file initialized.  Edit local.properties and re-run the compiler" />
      </then>
    </if>
    <!-- Set log4j defaults if they're not there already. -->
    <if>
      <not><isset property="log4j.rootLogger" /></not>
      <then>
        <echo file="local.properties" append="true">
log4j.rootLogger=INFO,A1
log4j.appender.A1=org.apache.log4j.ConsoleAppender
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=%d{HH:mm:ss,SSS} [%X{hostname}-%t] %-5p %c %x - %m%n
</echo>
        <echo message="Adding default logger settings to configuration file" />
      </then>
    </if>
    
    <!-- Compile DBToaster itself -->
    <if>
      <not><available file="${compiler.home}/dbtoaster.top" /></not>
      <then>
        <exec executable="make" dir="${compiler.home}"><arg value="top" /></exec>
      </then>
    </if>
    
    <!-- Initialize compilation and intermediate directories -->
    <mkdir dir="${build}" />
    <mkdir dir="${bin}" />
    
    <!-- Set up the classpath, and use it to compute the runtime classpath -->
    <path id="classpath">
      <pathelement path="${jruby.home}/lib/jruby.jar" />
      <pathelement path="lib/je.jar" />
      <pathelement path="lib/log4j-1.2.15.jar" />
    </path>
    <pathconvert refid="classpath" property="compile.classpath" />
    <property name="run.classpath" value="${compile.classpath}:${jar}" />
    
    <!-- Produce the necessary launcher scripts -->
    <exec executable="src/tools/make_launchers.sh">
      <arg value="${run.classpath}" />
      <arg value="${hostname}" />
    </exec>
  	
  	<copy file="${src}/ruby/bootstrap/run_hadoop.sh" tofile="${bin}/run_hadoop.sh"/>
  	<chmod file="${bin}/run_hadoop.sh" perm="755"/>
  </target>
  
  <target name="main" depends="init">
    <javac srcdir="${src}/java" destdir="${build}" classpathref="classpath" debug="true" />
    <jar destfile="${jar}">
      <fileset dir="${build}" />
      <fileset dir="${src}/ruby" />
    </jar>
  	<jar destfile="${bootjar}">
      <fileset dir="${src}/ruby/bootstrap">
      	<include name="multikeymap_HBase_JRB.rb"/>
      	<include name="join_utils.rb"/>
      </fileset>
  	</jar>
  </target>
  
  <target name="clean">
    <delete dir="${build}" />
    <delete dir="${bin}" />
  </target>
</project>
