<tree>
    <attributeDecl name="statement" type="String"/>
    <branch>
        <attribute name="statement" value="&lt;global&gt;"/>
        <branch>
            <attribute name="statement" value="tuple&amp;lt; int,int &amp;gt; on_insert_bids(int t, int id, int broker_id, int p, int v)"/>
            <branch>
                <attribute name="statement" value="profile cpu, insert_bids_prof_3"/>
                <branch>
                    <attribute name="statement" value="foreach ( int p0 in dom0 )"/>
                    <branch>
                        <attribute name="statement" value="profile cpu, insert_bids_prof_0"/>
                        <branch>
                            <attribute name="statement" value="if ( p&amp;gt;p0 )"/>
                            <leaf>
                                <attribute name="statement" value="var3 = (var3 + 1);"/>
                            </leaf>
                        </branch>
                        <leaf>
                            <attribute name="statement" value="map0[p0] = (map0[p0] + ((0.25 * v) - (v * var3)));"/>
                        </leaf>
                        <branch>
                            <attribute name="statement" value="if ( map0[p0]&amp;gt;0 )"/>
                            <leaf>
                                <attribute name="statement" value="var2 = min(var2, p0);"/>
                            </leaf>
                        </branch>
                    </branch>
                </branch>
                <leaf>
                    <attribute name="statement" value="if ( dom0.find(p) == dom0.end() ) { dom0[p] = 1; }
else { ++dom0[p]; }"/>
                </leaf>
                <branch>
                    <attribute name="statement" value="profile cpu, insert_bids_prof_1"/>
                    <leaf>
                        <attribute name="statement" value="bids.insert(make_tuple(t, id, broker_id, p, v));"/>
                    </leaf>
                    <branch>
                        <attribute name="statement" value="if ( map0.find(p)==map0.end() )"/>
                        <branch>
                            <attribute name="statement" value="foreach ( int t11, int id11, int broker_id11, int p11, int v11 in bids )"/>
                            <leaf>
                                <attribute name="statement" value="var5 = (var5 + v11);"/>
                            </leaf>
                        </branch>
                        <branch>
                            <attribute name="statement" value="foreach ( int t22, int id22, int broker_id22, int p22, int v22 in bids )"/>
                            <branch>
                                <attribute name="statement" value="if ( p22&amp;gt;p )"/>
                                <leaf>
                                    <attribute name="statement" value="var6 = (var6 + v22);"/>
                                </leaf>
                            </branch>
                        </branch>
                        <leaf>
                            <attribute name="statement" value="map0[p] = ((0.25 * var5) - var6);"/>
                        </leaf>
                        <branch>
                            <attribute name="statement" value="if ( map0[p]&amp;gt;0 )"/>
                            <leaf>
                                <attribute name="statement" value="var4 = min(var4, p);"/>
                            </leaf>
                        </branch>
                    </branch>
                </branch>
                <leaf>
                    <attribute name="statement" value="bind0 = min(var2, var4);"/>
                </leaf>
                <branch>
                    <attribute name="statement" value="profile cpu, insert_bids_prof_2"/>
                    <branch>
                        <attribute name="statement" value="foreach ( int var8 in map1 )"/>
                        <branch>
                            <attribute name="statement" value="if ( p&amp;gt;=var8 )"/>
                            <leaf>
                                <attribute name="statement" value="var7 = (var7 + 1);"/>
                            </leaf>
                        </branch>
                        <leaf>
                            <attribute name="statement" value="map1[var8] = (map1[var8] + ((p * v) * var7));"/>
                        </leaf>
                    </branch>
                    <branch>
                        <attribute name="statement" value="if ( map1.find(bind0)==map1.end() )"/>
                        <branch>
                            <attribute name="statement" value="foreach ( int t0, int id0, int broker_id0, int p0, int v0 in bids )"/>
                            <branch>
                                <attribute name="statement" value="if ( p0&amp;gt;=bind0 )"/>
                                <leaf>
                                    <attribute name="statement" value="var9 = (var9 + (p0 * v0));"/>
                                </leaf>
                            </branch>
                        </branch>
                        <leaf>
                            <attribute name="statement" value="map1[bind0] = var9;"/>
                        </leaf>
                    </branch>
                    <leaf>
                        <attribute name="statement" value="var0 = (var0 + map1[bind0]);"/>
                    </leaf>
                </branch>
            </branch>
            <branch>
                <attribute name="statement" value="profile cpu, insert_bids_prof_4"/>
                <branch>
                    <attribute name="statement" value="foreach ( int var11 in map2 )"/>
                    <branch>
                        <attribute name="statement" value="if ( p&amp;gt;=var11 )"/>
                        <leaf>
                            <attribute name="statement" value="var10 = (var10 + 1);"/>
                        </leaf>
                    </branch>
                    <leaf>
                        <attribute name="statement" value="map2[var11] = (map2[var11] + (v * var10));"/>
                    </leaf>
                </branch>
                <branch>
                    <attribute name="statement" value="if ( map2.find(bind0)==map2.end() )"/>
                    <branch>
                        <attribute name="statement" value="foreach ( int t0, int id0, int broker_id0, int p0, int v0 in bids )"/>
                        <branch>
                            <attribute name="statement" value="if ( p0&amp;gt;=bind0 )"/>
                            <leaf>
                                <attribute name="statement" value="var12 = (var12 + v0);"/>
                            </leaf>
                        </branch>
                    </branch>
                    <leaf>
                        <attribute name="statement" value="map2[bind0] = var12;"/>
                    </leaf>
                </branch>
                <leaf>
                    <attribute name="statement" value="var1 = (var1 + map2[bind0]);"/>
                </leaf>
            </branch>
            <leaf>
                <attribute name="statement" value="var15 = make_tuple(var0,var1);; return var15;"/>
            </leaf>
        </branch>
        <branch>
            <attribute name="statement" value="tuple&amp;lt; int,int &amp;gt; on_delete_bids(int t, int id, int broker_id, int p, int v)"/>
            <branch>
                <attribute name="statement" value="profile cpu, delete_bids_prof_3"/>
                <leaf>
                    <attribute name="statement" value="if ( dom0.find(p) != dom0.end() ) {
--dom0[p];
if ( dom0[p] == 0 ) { dom0.erase(p); }
}"/>
                </leaf>
                <branch>
                    <attribute name="statement" value="profile cpu, delete_bids_prof_0"/>
                    <leaf>
                        <attribute name="statement" value="multiset&lt;tuple&lt;int,int,int,int,int&gt; &gt;::iterator bids_it26 = bids.find(make_tuple(t, id, broker_id, p, v));
bids.erase(bids_it26);"/>
                    </leaf>
                    <branch>
                        <attribute name="statement" value="if ( dom0.find(p)==dom0.end() )"/>
                        <leaf>
                            <attribute name="statement" value="map0.erase(p);"/>
                        </leaf>
                    </branch>
                </branch>
                <branch>
                    <attribute name="statement" value="foreach ( int p0 in dom0 )"/>
                    <branch>
                        <attribute name="statement" value="profile cpu, delete_bids_prof_1"/>
                        <branch>
                            <attribute name="statement" value="if ( p&amp;gt;p0 )"/>
                            <leaf>
                                <attribute name="statement" value="var20 = (var20 + 1);"/>
                            </leaf>
                        </branch>
                        <leaf>
                            <attribute name="statement" value="map0[p0] = (map0[p0] - ((0.25 * v) - (v * var20)));"/>
                        </leaf>
                        <branch>
                            <attribute name="statement" value="if ( map0[p0]&amp;gt;0 )"/>
                            <leaf>
                                <attribute name="statement" value="var19 = min(var19, p0);"/>
                            </leaf>
                        </branch>
                    </branch>
                </branch>
                <leaf>
                    <attribute name="statement" value="bind0 = min(var16, var19);"/>
                </leaf>
                <branch>
                    <attribute name="statement" value="profile cpu, delete_bids_prof_2"/>
                    <branch>
                        <attribute name="statement" value="foreach ( int var22 in map1 )"/>
                        <branch>
                            <attribute name="statement" value="if ( p&amp;gt;=bind0 )"/>
                            <leaf>
                                <attribute name="statement" value="var21 = (var21 + 1);"/>
                            </leaf>
                        </branch>
                        <leaf>
                            <attribute name="statement" value="map1[var22] = (map1[var22] - ((p * v) * var21));"/>
                        </leaf>
                        <branch>
                            <attribute name="statement" value="if ( (var22==bind0) and (map1[var22]==0) )"/>
                            <leaf>
                                <attribute name="statement" value="map1.erase(var22);"/>
                            </leaf>
                            <leaf>
                                <attribute name="statement" value="resume"/>
                            </leaf>
                        </branch>
                    </branch>
                    <leaf>
                        <attribute name="statement" value="var0 = (var0 - map1[bind0]);"/>
                    </leaf>
                </branch>
            </branch>
            <branch>
                <attribute name="statement" value="profile cpu, delete_bids_prof_4"/>
                <branch>
                    <attribute name="statement" value="foreach ( int var24 in map2 )"/>
                    <branch>
                        <attribute name="statement" value="if ( p&amp;gt;=bind0 )"/>
                        <leaf>
                            <attribute name="statement" value="var23 = (var23 + 1);"/>
                        </leaf>
                    </branch>
                    <leaf>
                        <attribute name="statement" value="map2[var24] = (map2[var24] - (v * var23));"/>
                    </leaf>
                    <branch>
                        <attribute name="statement" value="if ( (var24==bind0) and (map2[var24]==0) )"/>
                        <leaf>
                            <attribute name="statement" value="map2.erase(var24);"/>
                        </leaf>
                        <leaf>
                            <attribute name="statement" value="resume"/>
                        </leaf>
                    </branch>
                </branch>
                <leaf>
                    <attribute name="statement" value="var1 = (var1 - map2[bind0]);"/>
                </leaf>
            </branch>
            <leaf>
                <attribute name="statement" value="return make_tuple(var0,var1);"/>
            </leaf>
        </branch>
    </branch>
</tree>