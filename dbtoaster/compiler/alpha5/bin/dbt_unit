#!/usr/bin/env ruby

require 'getoptlong';

$top = "bin/dbtoaster_top"
$dir = nil;
$includes = [];

GetoptLong.new(
  ["-t", "--top",      GetoptLong::REQUIRED_ARGUMENT],
  ["-u", "--unit-dir", GetoptLong::REQUIRED_ARGUMENT],
  ["-I",               GetoptLong::REQUIRED_ARGUMENT]
).each do |opt,arg|
  case opt
    when "-t", "--top"      then $top = arg
    when "-u", "--unit-dir" then $dir = arg
    when "-I"               then $includes.push arg
    else
      puts "Unrecognized argument '#{opt}'";
      exit -1;
  end
end

$dir = "#{File.dirname $top}/../test/unit" if $dir.nil?
$includes.map! { |i| "-I #{i}" }

def check_file(f) 
  unless File.exists? f then
    puts "Can't find #{f}"
    exit -1;
  end
end

check_file $top;
check_file $dir;

ARGV.each do |t|
  puts "==== #{t[0,1].upcase}#{t[1..-1]} ====";
  check_file "#{$dir}/#{t}.ml"
  exit -1 unless system "#{$top} #{$includes.join(" ")} #{$dir}/#{t}.ml"
end