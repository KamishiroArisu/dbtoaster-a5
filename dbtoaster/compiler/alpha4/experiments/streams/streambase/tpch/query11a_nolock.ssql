CREATE SCHEMA PartsuppSchema (
  partkey      int,
  suppkey      int,
  availqty     int,
  supplycost   double,
  comment      int
);

CREATE SCHEMA SupplierSchema (
  suppkey      int,
  name         int,
  address      int,
  nationkey    int,
  phone        int,
  acctbal      double,
  comment      int
);


/* Main memory TPCH tables */
CREATE MEMORY TABLE Supplier SupplierSchema PRIMARY KEY (suppkey);
CREATE MEMORY TABLE Partsupp PartsuppSchema PRIMARY KEY (partkey, suppkey);


/* Tuple identification across union of input streams */
CREATE SCHEMA TaggedInputs
    (stream_name string, evt int, s SupplierSchema, ps PartsuppSchema);

CREATE STREAM MultiplexedInputs TaggedInputs;

DECLARE Counter int DEFAULT 0;
CREATE STREAM UpdateCounter (i int);
UPDATE Counter FROM (SELECT i FROM UpdateCounter);
SELECT Counter+1 as i FROM MultiplexedInputs INTO UpdateCounter;


/*
 * Table change notification streams
 */
CREATE SCHEMA SSupplierSchema (tid int, s  SupplierSchema);
CREATE SCHEMA SPartsuppSchema (tid int, ps PartsuppSchema);
 
/* Pre-update serialized streams */ 
CREATE STREAM SInsertSupplier SSupplierSchema;
CREATE STREAM SInsertPartsupp SPartsuppSchema;

CREATE STREAM SDeleteSupplier SSupplierSchema;
CREATE STREAM SDeletePartsupp SPartsuppSchema;

/* Post-update serialized streams */
CREATE STREAM SupplierInserted SSupplierSchema;
CREATE STREAM PartsuppInserted SPartsuppSchema;

CREATE STREAM SupplierDeleted  SSupplierSchema;
CREATE STREAM PartsuppDeleted  SPartsuppSchema;


/* Partition into serialized streams */
SELECT Counter as tid, l  FROM MultiplexedInputs
WHERE stream_name = "partsupp" AND evt = 1 INTO SInsertPartsupp;

SELECT Counter as tid, p  FROM MultiplexedInputs
WHERE stream_name = "supplier" AND evt = 1 INTO SInsertSupplier;

SELECT Counter as tid, l  FROM MultiplexedInputs
WHERE stream_name = "partsupp" AND evt = 0 INTO SDeletePartsupp;

SELECT Counter as tid, p  FROM MultiplexedInputs
WHERE stream_name = "supplier" AND evt = 0 INTO SDeleteSupplier;


/* Maintain TPCH tables */
INSERT INTO Supplier SELECT s.* FROM SInsertSupplier
RETURNING SInsertSupplier.* INTO SupplierInserted;

INSERT INTO Partsupp SELECT ps.* FROM SInsertPartsupp
RETURNING SInsertPartsupp.* INTO PartsuppInserted;

DELETE FROM Supplier USING SDeleteSupplier
WHERE SDeleteSupplier.s.suppkey = Supplier.suppkey
RETURNING SDeleteSupplier.* INTO SupplierDeleted;

DELETE FROM Partsupp USING SDeletePartsupp
WHERE SDeletePartsupp.ps.partkey = Partsupp.partkey
  AND SDeletePartsupp.ps.suppkey = Partsupp.suppkey
RETURNING SDeletePartsupp.* INTO PartsuppDeleted;



/* Query body. */

CREATE STREAM TableChanged AS
SELECT tid FROM  SupplierInserted UNION SupplierDeleted
           UNION PartsuppInserted UNION PartsuppDeleted;


CREATE STREAM ReplaySupplier AS
SELECT TC.tid, S.suppkey
FROM TableChanged as TC, Supplier S;

CREATE STREAM ReplayPS AS
SELECT S.tid, PS.partkey, PS.supplycost*PS.availqty as sctaq
FROM ReplaySupplier as S, Partsupp as PS
WHERE S.suppkey = PS.suppkey;

CREATE STREAM Result AS
  SELECT now() as t, partkey, sum(sctaq) as result
  FROM ReplayPS[SIZE 1 ADVANCE 1 ON tid] AS S
  GROUP BY partkey;
