CREATE SCHEMA PartsuppSchema (
  partkey      int,
  suppkey      int,
  availqty     int,
  supplycost   double,
  comment      int
);

CREATE SCHEMA SupplierSchema (
  suppkey      int,
  name         int,
  address      int,
  nationkey    int,
  phone        int,
  acctbal      double,
  comment      int
);

CREATE SCHEMA DispatchSchema (
    streamname       string,
    event            int,
    acctbal          double,
    address          int,
    availqty         int,
    brand            int,
    clerk            int,
    comment          int,
    commitdate       int,
    container        int,
    custkey          int,
    discount         double,
    extendedprice    double,
    linenumber       int,
    linestatus       int,
    mfgr             int,
    mktsegment       int,
    name             int,
    nationkey        int,
    orderdate        int,
    orderkey         int,
    orderpriority    int,
    orderstatus      int,
    partkey          int,
    phone            int,
    quantity         double,
    receiptdate      int,
    regionkey        int,
    retailprice      double,
    returnflag       int,
    shipdate         int,
    shipinstruct     int,
    shipmode         int,
    shippriority     int,
    d_size           int,
    suppkey          int,
    supplycost       double,
    tax              double,
    totalprice       double,
    type             int
);

CREATE STREAM Dispatch       DispatchSchema;
CREATE STREAM Multiplexed AS
      SELECT lower(streamname) as stream_name, event as evt,
             PartsuppSchema(partkey, suppkey, availqty, supplycost, comment) as ps
      FROM Dispatch WHERE lower(streamname) = "partsupp"
UNION SELECT lower(streamname) as stream_name, event as evt,
             SupplierSchema(
               suppkey, name, address, nationkey, phone, acctbal, comment) as s
      FROM Dispatch WHERE lower(streamname) = "supplier";


/* Load data. */
CREATE STREAM FileEvents;

APPLY JAVA "com.streambase.sb.adapter.csvreader.CSVReader"
  (FileName="@@PATH@@query11a_agenda.csv", Delimiter=",", StartEventPort="true",
   TimestampFormat="yyyy-MM-dd", Schema=DispatchSchema)
  INTO Dispatch, FileEvents;
  
/* TODO: deletions */


/* Log outputs */
CREATE OUTPUT STREAM Query11AInDispatch;
/*CREATE OUTPUT STREAM Query11AProgress;*/
CREATE OUTPUT STREAM Query11AResults;

/* Run query module */
APPLY MODULE "query11a.ssql"
FROM MultiplexedInputs=Multiplexed
INTO UpdateCounter=Query11AInDispatch, /*Unlocked=Query11AProgress,*/
     Result=Query11AResults;

APPLY JAVA "com.streambase.sb.adapter.csvwriter.CSVWriter"
  (FileName="query11a.csv",
   IfFileExists="Truncate existing file",
   IfFileDoesntExist="Create new file")
  FROM Query11AResults;

/* Track query progress */
CREATE STREAM ProgressCounter AS
  SELECT i as Counter FROM Query11AInDispatch WHERE (i % 20) == 0;

/* Track data file open and close for timing */
CREATE OUTPUT STREAM TimedFileEvents AS
  SELECT now() as t, * FROM
    (SELECT * FROM
      (SELECT 0 as Counter, * FROM FileEvents) AS S UNION ProgressCounter );

/* Log data file events */
APPLY JAVA  "com.streambase.sb.adapter.csvwriter.CSVWriter"
  (FileName="file_events.csv",
   IfFileExists="Truncate existing file",
   IfFileDoesntExist="Create new file")
  FROM TimedFileEvents;
  
