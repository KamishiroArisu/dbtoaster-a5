create window Lineitem.win:keepall() as InsertLineitem;
create window Part.win:keepall()     as InsertPart;

insert into Lineitem select * from InsertLineitem;
insert into Part     select * from InsertPart;

on Lineitem insert into TableChanged select 1;
on Part     insert into TableChanged select 1;

create variable int current_update = 0;
on TableChanged set current_update = current_update+1;

insert into Subquery
  select current_update+1 as tid,
         p.partkey as partkey, sum(l2.quantity) as sumq
  from TableChanged as t unidirectional, Lineitem as l2, Part as p
  where l2.partkey = p.partkey
  group by p.partkey;

insert into FilteredLP
select s.tid as tid, s.partkey as partkey,
       sum(l.extendedprice) as sumep
from  Subquery as s unidirectional, Lineitem as l
where s.partkey = l.partkey
and   l.quantity < 0.005*sumq
group by s.tid, s.partkey;

create window AggOuter.win:keepall() as (tid int, sumep double, sz long);

insert into AggOuter
  select tid as tid, sum(sumep) as sumep, count(*) as sz
  from FilteredLP.win:ext_timed(tid, 1 msec);

/* We have a new invocation, produce results for any prior invocations before
   deleting their partials.
 */ 
on AggOuter(sz=1) as e
  select current_timestamp() as t, w.tid as tid, max(w.sumep) as sumep
  from AggOuter as w
  where w.tid < e.tid
  group by w.tid;

/* We are starting a new invocation, delete results for prior ones.
   This ensures that only the current invocation is active in AggOuter.
 */
on AggOuter(sz=1) as e delete from AggOuter as w where w.tid < e.tid;

/* We have a new partial result for the current invocation,
   delete prior partials for the current invocation. This ensures the query
   produces a single aggregate result for a window.
 */
on AggOuter(sz>1) as e
  delete from AggOuter as w
  where w.tid = e.tid and w.sz < e.sz;
